<config_plugin>
	<config>
		<project>*</project>
		<step>*</step>
		<entry>

			<!-- from which field inside of the METS file shall the content be used -->
			<fieldFrom>originalAccessLocations</fieldFrom>

			<!-- into which fields in the METS shall the new content be written -->
			<fieldTo>AccessLocations</fieldTo>

			<!-- if the fieldTo is named inside of the vocabulary entry itself: in 
				which vocabulary field of the entry is the METS metadata name defined to 
				be used? Please notice: if the entry cannot be found (as fieldFrom is not 
				found there) and that's why no fieldToDynamic can be read from the entry 
				the value of element fieldTo defined will be used to simply copy the original 
				metadata unchanged -->
			<fieldToDynamic>type</fieldToDynamic>

			<!-- what is the name of the vocabulary to use -->
			<vocabulary>Subject terms</vocabulary>

			<!-- the content in which vocabulary field has to be the same as in fieldFrom -->
			<contentSearch>original value</contentSearch>

			<!-- the content in which vocabulary field shall be taken to write it 
				into fieldTo -->
			<contentReplace>corrected value</contentReplace>
			
			<!-- if multiple metadata elements are stored in one metadata field 
				and shall all be used to be replaced, define a delimiter (e.g. ';' or '#') here
				if no delimiter is defined the whole value of the metadata will be used -->
			<metadataDelimiter>;</metadataDelimiter>
			
			<!-- if multiple records shall be created using a delimiter (e.g. ';' or '#') define it here
				if no delimiter is defined just one record will be created -->
			<vocabularyDelimiter>#</vocabularyDelimiter>

			<!-- the content in which vocabulary fields shall be taken to fill the 
				authority information for the replaced record -->
			<contentAuthority>authority</contentAuthority>
			<contentAuthorityUri>authorityURI</contentAuthorityUri>
			<contentAuthorityValueUri>valueURI</contentAuthorityValueUri>

			<!-- if the content for fieldFrom cannot be found in the vocabulary to be replaced, 
				shall the original value be duplicated then? -->
			<duplicateIfMissing>false</duplicateIfMissing>
			
			<!-- define if existing metadata in fieldTo shall be deleted before adding new fields -->
			<deleteExistingFieldTo>true</deleteExistingFieldTo>
			
			<!-- if the same value in fieldTo exists more than once remove the duplicates -->
			<removeDuplicatedFieldTo>false</removeDuplicatedFieldTo>
			
            <!-- Configure group name, if original field and replacement are within a metadata group -->
            <!-- 
            <metadataGroup></metadataGroup>
             -->
		</entry>
	</config>
</config_plugin>
